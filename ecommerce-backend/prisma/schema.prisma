generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo para Usuarios
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user") // Roles: "user", "admin"
  points    Int      @default(0) // Sistema de recompensas
  orders    Order[] // Relación con pedidos
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Modelo para Productos
model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int            @default(0) // Stock disponible
  category    String // Categoría del producto
  isHot       Boolean        @default(false) // Producto destacado
  orders      OrderProduct[]
  promotions  Promotion[] // Relación con promociones
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

// Modelo para Pedidos
model Order {
  id          Int             @id @default(autoincrement())
  userId      Int
  user        User            @relation(fields: [userId], references: [id])
  status      String          @default("Pending") // Estados: Pending, Preparing, Ready, Completed
  total       Float
  points      Int             @default(0) // Puntos generados por el pedido
  products    OrderProduct[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

// Relación entre Pedidos y Productos
model OrderProduct {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int // Cantidad del producto en el pedido
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Historial de Promociones
model Promotion {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id]) // Relación con Product
  discount  Float // Porcentaje de descuento
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
